 promethius server collects Kubernetes metrics using Kube-state-metrics, Node-exporter, and Kubernetes control plane metrics.
  1. kube-state-metrics: This component gathers metrics about the state of various Kubernetes objects such as pods, deployments, nodes, services, and more. 
  2. Node-exporter: Node-exporter collects system-level metrics from Kubernetes nodes, including CPU usage, memory usage, disk I/O, network traffic, and other hardware and operating system statistics. 
  3. Kubernetes control plane metrics: Prometheus can also scrape metrics from the Kubernetes control plane components, such as the API server, scheduler, controller manager, and etcd.
   Prometheus follows a pull-based model
   Prometheus provides a powerful query language called PromQL, which allows users to perform ad-hoc queries and create custom dashboards for visualization.
  By collecting metrics from these sources, Prometheus enables comprehensive monitoring and observability of Kubernetes clusters
  Prometheus retrieves metric data from all endpoints and stores it in a local time-series database.

 grafana 
   Grafana is an open-source analytics and monitoring platform that allows users to query, visualize, alert on, and understand metrics collected from various data sources, including Prometheus
   Grafana dashboards can be customized to display various K8s metrics, such as resource utilization (CPU, memory), network traffic, pod health, and cluster performance.
   Grafana also supports alerting based on the metrics data, which is useful for triggering notifications and taking appropriate actions in case of threshold breaches. 
   We can set up various alert rules based on the Kubernetes metrics data and configure Grafana to send notifications via various channels like email
